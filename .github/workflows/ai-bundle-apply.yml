name: AI Bundle — Apply (branch-local PR)

on:
  push:
    paths:
      - 'ai_inbox/*.txt'
  workflow_dispatch:
    inputs:
      bundle_path:
        description: 'Path to bundle in the current branch (e.g., ai_inbox/ai_bundle_fixed.txt)'
        required: false
        default: 'ai_inbox/ai_bundle_fixed.txt'
      pr_paths:
        description: 'Limit PR to these globs (comma/newline separated). Default = read from # PR_PATHS or patches/**'
        required: false
        default: ''

jobs:
  apply:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout base branch (this branch)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Gather bundles (push or manual)
        id: bundles
        shell: bash
        run: |
          set -e
          mkdir -p .bundles
          if [ "${{ github.event_name }}" = "push" ]; then
            BEFORE="${{ github.event.before }}"
            AFTER="${{ github.sha }}"
            git fetch --no-tags --depth=50 origin "$BEFORE" "$AFTER" || true
            files=$(git diff --name-only "$BEFORE" "$AFTER" -- 'ai_inbox/*.txt' || true)
            list=""
            for f in $files; do
              [ -z "$f" ] && continue
              git show "$AFTER:$f" > ".bundles/$(basename "$f")" || true
              [ -f ".bundles/$(basename "$f")" ] && list="$list .bundles/$(basename "$f")"
            done
            echo "files=$list" >> $GITHUB_OUTPUT
            if [ -z "$list" ]; then
              echo "::error::No ai_inbox/*.txt changes found in push"
              exit 1
            fi
          else
            path="${{ github.event.inputs.bundle_path }}"
            if [ ! -f "$path" ]; then
              echo "::error::Bundle not found: $path"
              exit 1
            fi
            cp "$path" ".bundles/$(basename "$path")"
            echo "files=.bundles/$(basename "$path")" >> $GITHUB_OUTPUT
          fi

      - name: Ensure helper (apply) exists
        run: |
          if [ ! -f scripts/apply_ai_bundle.py ]; then
            echo "::error::scripts/apply_ai_bundle.py not found"; exit 1
          fi
          chmod +x scripts/apply_ai_bundle.py

      - name: Apply bundle(s) onto working tree
        run: |
          set -e
          for f in ${{ steps.bundles.outputs.files }}; do
            [ -z "$f" ] && continue
            echo "Applying $f"
            python3 scripts/apply_ai_bundle.py "$f"
          done

      - name: Resolve PR paths (input / header / default)
        id: prpaths
        shell: bash
        run: |
          paths_input="${{ github.event.inputs.pr_paths }}"
          if [ -z "$paths_input" ]; then
            for f in ${{ steps.bundles.outputs.files }}; do
              hdr="$(head -n 50 "$f" || true)"
              line="$(printf "%s\n" "$hdr" | sed -n 's/^# *PR_PATHS:\s*//p' | head -n1)"
              if [ -n "$line" ]; then paths_input="$line"; break; fi
            done
          fi
          [ -n "$paths_input" ] || paths_input="patches/**"
          norm="$(printf "%s\n" "$paths_input" | tr ',' '\n' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//' | sed '/^$/d')"
          echo "paths<<EOF" >> $GITHUB_OUTPUT
          echo "$norm"      >> $GITHUB_OUTPUT
          echo "EOF"        >> $GITHUB_OUTPUT
          echo "PR paths:"; printf "%s\n" "$norm"

      - name: Optional: regenerate README
        run: |
          if [ -f scripts/gen_readme_scan.py ]; then
            python3 scripts/gen_readme_scan.py || echo "README scan failed (ignored)"
          fi

      - name: Create PR (base = this branch)
        uses: peter-evans/create-pull-request@v6
        id: cpr
        with:
          base: ${{ github.ref_name }}
          commit-message: "Apply AI bundle(s)"
          title: "Apply AI bundle(s) on ${{ github.ref_name }}"
          body: |
            Auto-created by **AI Bundle — Apply (branch-local)**.
            Bundles: ${{ steps.bundles.outputs.files }}
            Paths:
            ${{ steps.prpaths.outputs.paths }}
          branch: "bot/apply-ai-bundle-${{ github.run_number }}"
          delete-branch: true
          labels: ai-bundle, automation
          add-paths: |
            ${{ steps.prpaths.outputs.paths }}
          pathspec_error_no_match: false

      - name: PR URL
        run: echo "${{ steps.cpr.outputs.pull-request-url }}"
